{"version":3,"sources":["components/Button/index.js","components/Jumbotron/index.js","Utils/API.js","components/EmployeeList/index.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Button","type","className","children","onClick","Jumbotron","users","getUsers","axios","get","EmployeeLIst","useState","setUsers","useEffect","API","then","res","data","results","catch","err","console","log","map","headers","i","scope","user","name","first","last","email","cell","login","uuid","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOASeA,MANf,YACE,OADkE,EAAlDC,KAAkD,EAAhCC,UAAgC,EAArBC,SAAqB,EAAXC,QAErD,wBAAQH,KAAK,SAASC,UAAU,oBAAhC,sBCIWG,MARf,WACE,OACE,qBAAKH,UAAU,wBAAf,SACE,uD,yBCISI,EALD,CACZC,SAAU,WACV,OAAOC,IAAMC,IAAI,kDCwCFC,EAzCI,WAAO,IAAD,EAEGC,mBAAS,IAFZ,mBAEhBL,EAFgB,KAETM,EAFS,KAIvBC,qBAAU,WACNC,EAAIP,WACHQ,MAAK,SAAAC,GAAG,OACPJ,EAASI,EAAIC,KAAKC,YAEnBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAKL,OACC,8BACG,uBAAOlB,UAAU,kCAAjB,SAEN,kCAEE,6BARe,CAAC,OAAQ,QAAS,UASrBqB,KAAI,SAACC,EAASC,GAAV,OACP,oBAAIC,MAAM,MAAV,SAAyBF,GAAJC,QAI3BnB,EAAMiB,KAAI,SAAAI,GAAI,OACT,+BACJ,6BAAKA,EAAKC,KAAKC,MAAQ,IAAMF,EAAKC,KAAKE,OACvC,6BAAKH,EAAKI,QACV,6BAAKJ,EAAKK,SAHGL,EAAKM,MAAMC,iBChBfC,EAXJ,WAET,OACC,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCQC,MARf,WACE,OACC,8BACE,cAAC,EAAD,OCKUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.25985456.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction Button({ type = \"default\", className, children, onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"btn btn-secondary\">Add New</button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>Employee Directory</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import axios from 'axios';\r\n\r\n\r\nconst users = {\r\n  getUsers: function() {\r\n  return axios.get('https://randomuser.me/api/?results=10&nat=us');\r\n}};\r\n\r\nexport default users;","import React, {useState, useEffect} from 'react';\r\nimport API from '../../Utils/API';\r\n\r\n\r\nconst EmployeeLIst = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getUsers()\r\n        .then(res => \r\n          setUsers(res.data.results)\r\n        )\r\n        .catch(err => console.log(err));\r\n      }, [])\r\n\r\n\r\n    const header = ['name', 'email', 'number']\r\n\r\n    return ( \r\n     <div>\r\n        <table className=\"table table-bordered table-dark\">\r\n    \r\n  <tbody>\r\n\r\n    <tr>\r\n        {header.map((headers, i ) => \r\n             <th scope=\"col\" key={i}>{headers}</th>\r\n        )}\r\n     </tr>\r\n \r\n      {users.map(user => (   \r\n            <tr key={user.login.uuid}>\r\n        <td>{user.name.first + \" \" + user.name.last}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.cell}</td>\r\n        </tr>\r\n        )) }\r\n   \r\n  </tbody>\r\n</table>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n  export default EmployeeLIst;","import React from 'react';\r\nimport Button from '../components/Button/index';\r\nimport Jumbotron from '../components/Jumbotron/index';\r\nimport EmployeeLIst from '../components/EmployeeList/index';\r\n\r\nconst Home = () => {\r\n\r\n    return ( \r\n     <div>\r\n       <Jumbotron></Jumbotron>\r\n       <Button></Button>\r\n       <EmployeeLIst></EmployeeLIst>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n   <div>\n     <Home></Home>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}